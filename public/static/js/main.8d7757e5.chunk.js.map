{"version":3,"sources":["components/Navbar.js","components/Hero.js","components/Musician.js","components/MusiciansAdmin.js","components/Home.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","role","aria-label","href","src","width","height","alt","id","Component","Hero","MusicianAdmin","state","isEditMode","updatedmusicianname","_this","props","name","handleMusicianEdit","event","preventDefault","setState","handleEditSave","handleUpdateMusician","onAddMusicianNameChange","target","value","_this2","this","isAdmin","react","onClick","handleDeleteMusician","type","placeholder","onChange","firstname","lastname","genre","MusiciansAdmin","newmusician","firstName","lastName","musicians","outputHTML","handleAddMusician","_callee","regenerator_default","wrap","_context","prev","next","axios","put","concat","Object","toConsumableArray","t0","console","log","stop","musicianToUpdate","find","musician","updatedMusicians","filter","musicianname","push","_callee2","_context2","delete","toLowerCase","sent","fetchMusicians","_callee3","res","allMusicians","_context3","get","keys","data","map","key","onAddMusicianFirstNameChange","objectSpread","onAddMusicianLastNameChange","onAddMusicianGenreChange","componentDidMount","onSubmit","index","Musician_MusicianAdmin","Home","MusiciansAdmin_MusiciansAdmin","Footer","library","add","faEdit","App","BrowserRouter","Navbar_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d7757e5.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"notes-logo.jpg\" width=\"400\" height=\"50\" alt=\"logo\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <a href=\"/register\" className=\"button is-primary\">\n                  <strong>Sign up</strong>\n                </a>\n                <a href=\"/login\" className=\"button is-light\">\n                  Log in\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n","import React from 'react';\n\nexport default function Hero() {\n  return (\n    <section className=\"hero is-primary\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          Musician App\n        </div>\n      </div>\n    </section>\n  )\n}\n","import React, { Component, Fragment }  from 'react';\n\nexport default class MusicianAdmin extends Component {\n\n  state = {\n    isEditMode: false,\n    updatedmusicianname: this.props.name\n  }\n\n  handleMusicianEdit = event => {\n    event.preventDefault();\n    this.setState({ isEditMode: true });\n  }\n\n  handleEditSave = event => {\n    event.preventDefault();\n    this.setState({ isEditMode: false });\n    this.props.handleUpdateMusician(this.props.id, this.state.updatedmusicianname);\n  }\n\n  onAddMusicianNameChange = event => this.setState({ \"updatedmusicianname\": event.target.value });\n\n  render() {\n    return (\n        <div className=\"box musician-card notification is-success\">\n          {\n            this.props.isAdmin && \n            <Fragment>\n              <button onClick={event => this.props.handleDeleteMusician(this.props.id, event)} className=\"delete\"></button>\n            </Fragment>\n          }\n          {\n            this.state.isEditMode \n            ? <div>\n                <p>Edit musician name</p>\n                <input \n                  className=\"input is-medium\"\n                  type=\"text\" \n                  placeholder=\"Enter name\"\n                  value={this.state.updatedmusicianname}\n                  onChange={this.onAddMusicianNameChange}\n                />\n                <p className=\"musician-id\">id: { this.props.id }</p>\n                <button type=\"submit\" \n                  className=\"button is-info is-small\"\n                  onClick={ this.handleEditSave }\n                >save</button>\n              </div>\n            : <div>\n                <p className=\"musician-title\">{this.props.firstname } {this.props.lastname }</p>\n                <p className=\"musician-id\">genre: { this.props.genre }</p>\n              </div>\n          }\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport Musician from './Musician';\nimport axios from \"axios\";\n\nexport default class MusiciansAdmin extends Component {\n\n  state = {\n    newmusician: { \n      firstName: \"\",\n      lastName: \"\",\n      genre: \"\"\n    },\n    musicians: []\n  }\n\n  outputHTML = \"\";\n\n  handleAddMusician = async(id, event) => {\n    event.preventDefault();\n    try {\n      await axios.put(`/musician/${id}`, this.state.newmusician);\n      this.setState({ musicians: [...this.state.musicians, this.state.newmusician] });\n      this.setState({ newmusician: { \"firstName\": \"\", \"lastName\": \"\", \"genre\": \"\" }});\n    }catch(err) {\n      console.log(err);\n    }\n  }\n\n  handleUpdateMusician = (id, name) => {\n    // add call to AWS API Gateway update musician endpoint here\n    const musicianToUpdate = [...this.state.musicians].find(musician => musician.id === id);\n    const updatedMusicians = [...this.state.musicians].filter(musician => musician.id !== id);\n    musicianToUpdate.musicianname = name;\n    updatedMusicians.push(musicianToUpdate);\n    this.setState({musicians: updatedMusicians});\n  }\n\n  handleDeleteMusician = async(id, event) => {\n    // using firstName as the id in musicians state\n    event.preventDefault();\n    try {\n      await axios.delete(`/musician/${id}`);\n      const updatedMusicians = await [...this.state.musicians].filter(musician => musician.firstName.toLowerCase() !== id);\n      this.setState({musicians: updatedMusicians});\n    }catch(err) {\n      console.log(err);\n    }\n  }\n\n  fetchMusicians = async() => {\n    try{\n      const res = await axios.get('/musician/all');\n      const allMusicians = Object.keys(res.data).map((key) => {\n        return res.data[key];\n      });\n      this.setState({ musicians: [...allMusicians] });\n    }catch(err) {\n      console.log(err);\n    }\n  }\n\n  onAddMusicianFirstNameChange = event => this.setState({ newmusician: { ...this.state.newmusician, \"firstName\": event.target.value } });\n  onAddMusicianLastNameChange = event => this.setState({ newmusician: { ...this.state.newmusician, \"lastName\": event.target.value } });\n  onAddMusicianGenreChange = event => this.setState({ newmusician: { ...this.state.newmusician, \"genre\": event.target.value } });\n\n  componentDidMount = () => {\n    this.fetchMusicians();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <section className=\"section\">\n          <div className=\"container\">\n            <p className=\"subtitle is-5\">Add and remove musicians using the form below:</p>\n            <br />\n            <div className=\"columns\">\n              <div className=\"column is-one-third\">\n                <form onSubmit={event => this.handleAddMusician(this.state.newmusician.firstName.toLowerCase(), event)}>\n                  <div className=\"field\">\n                    <div className=\"control\">\n                      <input \n                        className=\"input is-medium\"\n                        type=\"text\" \n                        placeholder=\"Enter first name\"\n                        value={this.state.newmusician.firstName}\n                        onChange={this.onAddMusicianFirstNameChange}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <div className=\"control\">\n                      <input \n                        className=\"input is-medium\"\n                        type=\"text\" \n                        placeholder=\"Enter last name\"\n                        value={this.state.newmusician.lastName}\n                        onChange={this.onAddMusicianLastNameChange}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <div className=\"control\">\n                      <input \n                        className=\"input is-medium\"\n                        type=\"text\" \n                        placeholder=\"Enter genre\"\n                        value={this.state.newmusician.genre}\n                        onChange={this.onAddMusicianGenreChange}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <div className=\"control\">\n                      <button type=\"submit\" className=\"button is-primary is-medium\">\n                        Add musician\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"column is-two-thirds\">\n                {\n                  this.state.musicians.map((musician, index) =>\n                    <Musician\n                        isAdmin={true}\n                        handleUpdateMusician={this.handleUpdateMusician}\n                        handleDeleteMusician={this.handleDeleteMusician}\n                        firstname={musician.firstName}\n                        lastname={musician.lastName}\n                        genre={musician.genre}\n                        key={musician.lastName.toLowerCase()}\n                        id={musician.firstName.toLowerCase()}\n                        index={index}\n                      />\n                  )}\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    )\n  }\n}\n","import React, { Fragment } from 'react';\nimport Hero from './Hero';\nimport MusiciansAdmin from './MusiciansAdmin';\n\nexport default function Home() {\n  return (\n    <Fragment>\n      <Hero />\n      <MusiciansAdmin />\n    </Fragment>\n  )\n}\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n           Musician App 2019. The source code is licensed MIT. The website content is licensed CC BY NC SA 4.0.\n        </p>\n      </div>\n    </footer>\n  )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Footer from './components/Footer';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faEdit);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}